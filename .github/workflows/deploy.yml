# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -Pproduction --file pom.xml
    - name: Beanstalk Deploy
  # You may pin to the exact commit or the version.
  # uses: einaregilsson/beanstalk-deploy@2fcd415f492b2a2ceaada75e602401b5a28c8cd6
  uses: einaregilsson/beanstalk-deploy@v19
  with:
    # AWS Access Key
    aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
    # AWS Secret Key
    aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
    # AWS Session Token when using temporary security credentials such as when assuming a role in AWS through STS
    aws_session_token: # optional
    # AWS Region
    region: eu-north-1
    # Beanstalk application name
    application_name: acsa-chatbot
    # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
    environment_name: Acsachatbot-env-1
    # Version label for new Beanstalk version
    version_label: ${{ github.run_number }}
    # Version description for the new Beanstalk version
    # version_description: # optional
    # Zip file with the version to deploy. If skipped the action will deploy existing version.
    deployment_package: botmanager-0.0.1-SNAPSHOT.jar
    # Whether the action should skip creating a new bucket and use the given one to upload the deployment package to instead. When omitted the actions will (try to) create a new one during deployment.
    # existing_bucket_name: # optional
    # If set to "true" then the action will deploy an existing version with the given version_label if it already exists, but otherwise create the version and deploy it. If set to true for an action with no environment name it will upload a version if it does not exist already, but do nothing if the version already exists.
    # use_existing_version_if_available: # optional
    # Whether the action should wait for the deployment to finish and log status messages during the wait. Default is "true". If set to "false" the action will start the deployment on Beanstalk and then exit.
    # wait_for_deployment: # optional
    # How many seconds to wait for the environment to return to Green state after deployment is finished. Default is 30 seconds.
    # wait_for_environment_recovery: # optional
